<?xml version="1.0" encoding="UTF-8"?>

<web-app version="3.0" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee 
	http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd">

	<display-name>Spring_Jersey_Jackson_Example</display-name>

	<servlet>
		<servlet-name>Jersey REST Service</servlet-name>
		<servlet-class>org.glassfish.jersey.servlet.ServletContainer</servlet-class>
		<!-- Register package which contains web service classes. The parameter 
			jersey.config.server.provider.packages defines in which package Jersey will 
			look for the web service classes. Either this parameter should be given here 
			or in project application class specified below -->
			
		<!-- <init-param>
			<param-name>jersey.config.server.provider.packages</param-name>
			<param-value>test.example.resources</param-value>
		</init-param> -->
		
		<!-- The parameter com.sun.jersey.api.json.POJOMappingFeature integrate 
			jersey with jackson. Either this parameter should be given here or Jackson 
			feature should be registered in project application class specified below. -->
		<!-- <init-param>
		
			<param-name>com.sun.jersey.api.json.POJOMappingFeature</param-name>
			<param-value>true</param-value>
		</init-param> -->
		
		<!-- Bootstrap the Jersey Servlet Container and point it to project Application 
			Class that can hold the Jersey Provider and Resource configuration -->
			
		<init-param>
			<param-name>javax.ws.rs.Application</param-name>
			<param-value>test.example.MyApplication</param-value>
		</init-param>

		<load-on-startup>1</load-on-startup>
	</servlet>
	<servlet-mapping>
		<servlet-name>Jersey REST Service</servlet-name>
		<url-pattern>/rest/*</url-pattern>
	</servlet-mapping>

	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			/WEB-INF/dispatcher-servlet.xml
		</param-value>
	</context-param>

	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
</web-app>